knitr::opts_chunk$set(echo = TRUE)
library(readxl)
library(plyr)
library(dplyr)
library(tidyr)
library(stringr)
Data <- read_excel("DMA_Fatigue_Data_from_Team_Wendy_Polyurethane_LLNL-MI-860456.xlsx", skip=3)
Data <- subset(Data, select = -c(62:64))
Data <- Data |>
dplyr::rename(NVP_Cyc_N = NVP_Cyc_N...61,
NVP_Cyc_M = NVP_Cyc_M...60,
NVP_Cyc_L = NVP_Cyc_L...59)
extract_name_df <- Data |>
separate(col = SampleCode,
into = c("chemistry", "chemIndex", "porosity", "sampleNum"))
#split up into 4 df's and pivot longer on each subset
cyclesDf <- subset(extract_name_df, select = c(1:8,9:22))
stiffnessDf <- subset(extract_name_df, select = c(1:8,23:36))
cycle1 <- stiffnessDf$E1_MPA_Cyc_A
stiffF <- stiffnessDf[9:22]/cycle1
stiffnessDf2 <- stiffnessDf
stiffnessDf2[9:22] <- stiffF
dampingDf <- subset(extract_name_df, select = c(1:8,37:50))
cycle1_damping <- dampingDf$delta_rad_Cyc_A
dampF <- tan(dampingDf[9:22])/tan(cycle1_damping)
dampingDf2 <- dampingDf
dampingDf2[9:22] <- dampF
nonlinearDf <- subset(extract_name_df, select = c(1:8,51:64))
#cycles
long_cycles <- cyclesDf |>
pivot_longer(cols = names(cyclesDf[9:22]),
names_to = "cycleLet",
values_to = "cycleNum")
long_cycles$cycleLet <- apply(cbind(long_cycles$cycleLet), 1,
function(x) substr(x, str_length(x), str_length(x)))
# stiffness
stiffFraction <- stiffnessDf2 |>
pivot_longer(cols=names(stiffnessDf[9:22]),
names_to = "cycleLet",
values_to = "stiffFrac")
stiffFraction$cycleLet <- apply(cbind(stiffFraction$cycleLet), 1,
function(x) substr(x, str_length(x), str_length(x)))
long_stiffness <- stiffnessDf |>
pivot_longer(cols = names(stiffnessDf[9:22]),
names_to = "cycleLet",
values_to = "stiffness")
long_stiffness$cycleLet <- apply(cbind(long_stiffness$cycleLet), 1,
function(x) substr(x, str_length(x), str_length(x)))
long_stiffness <- long_stiffness |>
join(stiffFraction,by=names(long_stiffness[1:9]))
# damping
dampFraction <- dampingDf2 |>
pivot_longer(cols=names(dampingDf[9:22]),
names_to = "cycleLet",
values_to = "dampFrac")
dampFraction$cycleLet <- apply(cbind(dampFraction$cycleLet), 1,
function(x) substr(x, str_length(x), str_length(x)))
long_damping <- dampingDf |>
pivot_longer(cols = names(dampingDf[9:22]),
names_to = "cycleLet",
values_to = "damping")
long_damping$cycleLet <- apply(cbind(long_damping$cycleLet), 1,
function(x) substr(x, str_length(x), str_length(x)))
long_damping <- long_damping |>
join(dampFraction,by=names(long_damping[1:9]))
# nonlinear
long_nonlinear <- nonlinearDf |>
pivot_longer(cols= names(nonlinearDf[9:22]),
names_to = "cycleLet",
values_to = "nonlinear")
long_nonlinear$cycleLet <- apply(cbind(long_nonlinear$cycleLet), 1,
function(x) substr(x, str_length(x), str_length(x)))
joined_df <- long_cycles |>
join(long_stiffness, by=names(long_cycles[1:9]), type = "left") |>
join(long_damping, by=names(long_cycles[1:9]), type = "left") |>
join(long_nonlinear, by=names(long_cycles[1:9]), type = "left")
full_df <- joined_df |>
mutate(strainRate = 4*amp*freq)
full_df <- full_df |>
mutate(stiffness = abs(stiffness)) |>
select(!chemistry) |>
drop_na()
View(full_df)
View(full_df)
write.csv(full_df, "clean_helmet.csv", row.names=FALSE)
# read in data
helmet <- read.csv("clean_helmet.csv")
#| echo: false
#| include: false
#| label: front-matter
#| warning: false
# clean up & set default chunk options
rm(list = ls())
knitr::opts_chunk$set(echo = FALSE)
# packages
library(tidyverse) # for example
library(mosaic)    # for example
library(ggformula) # for example
library(car)       # for example
library(tinytex)   # for example
# read in data
helmet <- read.csv("clean_helmet.csv")
# use this space to do any data processing you need
#| echo: false
#| include: false
#| label: front-matter
#| warning: false
# clean up & set default chunk options
rm(list = ls())
knitr::opts_chunk$set(echo = FALSE)
# packages
library(tidyverse) # for example
library(mosaic)    # for example
library(ggformula) # for example
library(car)       # for example
library(tinytex)   # for example
# read in data
helmet <- read.csv("clean_helmet.csv")
helmet$chemIndex <- as.factor(helmet$chemIndex)
helmet$porosity <- as.factor(helmet$porosity)
#filter out cycle number 0:
helmet <- helmet |>
subset(cycleNum != 0)
# use this space to do any data processing you need
library(viridis)
View(helmet)
View(helmet)
